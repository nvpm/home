fu! line#init(...) "{
  if exists('s:init')|return|else|let s:init=1|endif
  let s:nvim = has('nvim')

  let s:activate  = get(g:,'line_activate',1)
  let s:verbose   = get(g:,'line_verbose' ,2)
  let s:projname  = get(g:,'line_projname',0)
  let s:gitinfo   = get(g:,'line_gitinfo',1)
  let s:delay     = get(g:,'line_gitdelay',20000)
  let limit       = s:delay>=2000
  let s:delay     = limit*s:delay+!limit*2000

  let s:atomtype  = get(g:,'line_atomtype',1)
  let s:powerline = get(g:,'line_powerline',-1)
  let s:colors    = get(g:,'line_colors',{})

  let g:line = {}
  let g:line.nvpm = 0
  let g:line.zoom = 0
  let g:line.mode = 0
  let g:line.timer= -1
  let g:line.git  = ''

  let s:laststatus  = &laststatus
  let s:showtabline = &showtabline

  if !empty(s:colors)
    call line#seth()
  endif

  if s:activate
    hi clear TabLine
    hi clear StatusLine
    call line#show()
  endif

endfu "}
fu! line#geth(...) "{

  let group = a:1
  let field = get(a:,2,'no field')
  let args = {}
  if hlexists(group)
    let info = execute('hi '.group)
    let info = split(info,'\s\+')[2:]
    let info = map(info,'split(v:val,"=")')
    for arg in info
      if arg[0]==field|return arg[1]|endif
      let args[arg[0]] = arg[1]
    endfor
  endif
  return args

endfu "}
fu! line#seth(...) "{

  let data = get(a:,1,s:colors)

  for atom in keys(data)
    let name = 'line'.atom
    let atom = data[atom]
    if type(atom)==type([])&&!hlexists(name)
      let gbg = get(atom,0,'')|let gbg=['guibg='..  gbg,''][empty(gbg)]
      let gfg = get(atom,1,'')|let gfg=['guifg='..  gfg,''][empty(gfg)]
      let gui = get(atom,2,'')|let gui=['gui='  ..  gui,''][empty(gui)]
      let cbg = get(atom,3,'')|let cbg=['ctermbg='..cbg,''][empty(cbg)]
      let cfg = get(atom,4,'')|let cfg=['ctermfg='..cfg,''][empty(cfg)]
      let ctm = get(atom,5,'')|let ctm=['cterm='  ..ctm,''][empty(ctm)]
      let arg = gbg.' '.gfg.' '.gui.' '
      let arg.= cbg.' '.cfg.' '.ctm
      if !empty(arg)
        exe 'hi '..name..' '..arg
      endif
    elseif type(atom)==type({})
    endif
  endfor

endfu "}

