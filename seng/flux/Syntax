
  ● The fluxconf syntax ~

  The  fluxconf is an important component in the flux plugin. It defines the
  general  behaviour of the flux#flux() function call. It comes in a form of
  a VimL dictionary  with the following keys: 'file', 'body', 'tree', 'leaf'

  The following is a valid fluxconf:
>
  --- VimL
      let fluxconf = #{
        \file: 'devl/flux/file.txt',
        \vars: 'let var',
        \tree: 'arch | pack tab',
        \leaf: 'file buff',
      \}
  ---
<
  ● The Flux File Syntax ~

  The    FF    syntax   is   composed   of   a   series   of   statements
  separated by  line-break or by the comma (",") character. The following
  represents  the   right   usage   of   each   statement   in   a   flux
  file:

       ╭──────────────────────────────────────────────────────────╮    ~
       │  modifier   keyword   kname   [@=:]   kroot   # comment  │ ~
       │     m          k        n       s       r         c      │ ~
       ╰──────────────────────────────────────────────────────────╯ ~

  m: the element modifier
  k: the keyword itself
  n: the name for that keyword
  s: the separator
  r: the root for that keyword
  c: the comments (# ...)

  Considering the following fluxconf,

  ------ VimL --------
  let fluxconf = #{
    \file: "nodes.txt",
    \leaf: ["node"],
  \}
  --------------------

  the  following  is  a  valid flux file and its respective flux#flux()
  response:

    nodes.txt                #{                                        ~
  ╭────────────────────────╮   conf : #{ file : 'nodes.txt',           ~
  │ node main , node code  │     node : [['node']],                    ~
  │ node meta , node conf  │     vars : {},                            ~
  ╰────────────────────────╯   data : {                                ~
                                 indx : 0,                             ~
                                 list : [                              ~
                                   #{word:'node',name:'main',info:''}, ~
                                   #{word:'node',name:'code',info:''}, ~
                                   #{word:'node',name:'meta',info:''}, ~
                                   #{word:'node',name:'conf',info:''}, ~
                                ]}}}                                   ~

   
vim: ft=help: tw=2
